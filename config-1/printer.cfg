# This file contains pin mappings for the Voxelab Aquila with
# HC32F460 on the 1.0.3 mainboard. To use this config, during
# "make menuconfig" select the the HC32F460.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on PC0/PC1), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# Pin 7: Tx, Pin 8: Rx Pin 2: GND, Pin 1: +5V

# Flash this firmware by copying "out/klipper.bin" to
#  /firmware/klipper.bin on an SD card (8GB works) and then
#  turning on the printer with the card inserted.
#  The file will be deleted upon success

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: ^PA7
position_endstop: 0.0
position_max: 250

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300

#[filament_switch_sensor runoutSensor]
#switch_pin: !PA4

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/virtualcom0
baud: 230400
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 10000
max_z_velocity: 10
max_z_accel: 100


[input_shaper]
shaper_freq_x: 33
shaper_freq_y: 23
shaper_type: mzv

##########################################################
##########################################################
### additions for BLtouch - uncomment where needed
# BLtouch configuration
# The x-offset is in negative form if
# bltouch is mounted on left side of hotend.

#[bltouch]
#sensor_pin: ^PB1
#control_pin: PB0
#x_offset: -40.0
#y_offset: 0
#z_offset: 0.5
#pin_move_time: 0.4
#speed: 20

#[bed_mesh]
#speed: 120
#horizontal_move_z: 5
#mesh_min: 10, 20
#mesh_max: 190, 190
#probe_count: 5, 3
#algorithm: bicubic

#[gcode_macro g29]
#gcode:
# BED_MESH_CALIBRATE
# BED_MESH_OUTPUT

#[homing_override]
#gcode:
# G90 ; Use absolute position mode
# G1 Z10 ; Move up 10mm
# G28 X Y
# G1 X166 Y120 F6000 ; Change X & Y to center of your print bed
# G28 Z
# set_position_z: 0.0

##########################################################
### modification to Z for BLtouch
##  and comment out the line: position_endstop: 0.0
#[stepper_z]
#step_pin: PB6
#dir_pin: !PB5
#enable_pin: !PC3
#microsteps: 16
#rotation_distance: 8
#position_max: 250
#endstop_pin: probe:z_virtual_endstop

[virtual_sdcard]
path: /opt/printer_data/gcodes

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.425
#*# pid_ki = 1.356
#*# pid_kd = 119.181
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.750
#*# pid_ki = 1.825
#*# pid_kd = 765.257
